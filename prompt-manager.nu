###########################################################################################################################################################
###########################################################################################################################################################
#####################                                                  Imports                                                      #######################
###########################################################################################################################################################
###########################################################################################################################################################

use context-manager.nu *
use customer-manager.nu *
use machine-manager.nu *
use service-manager.nu *

###########################################################################################################################################################
###########################################################################################################################################################
#####################                                             Public functions                                                  #######################
###########################################################################################################################################################
###########################################################################################################################################################

# Function to get a formatted string for prompt display
export def get-prompt-context [] {
    let context = load_context
    if not ($context.prompt_show) {
        ""
        return
    } else {
        try {
            let host_name = get-current-host | columns | first
            let host_info = get-current-host | get $host_name
            let customer_info = get-current-customer
            if ($customer_info != "No customer currently selected") {
                let customer_name = $customer_info | columns | first
                let customer_abbr = $customer_info | get $customer_name | get abbreviation
                # Different formatting based on host type
                if ($host_info.hostname == "localhost") {
                    $"üè† local - ($customer_abbr)"
                } else {
                    $"üåê ($host_info.name) - ($customer_abbr)"
                }
            } else {
                if ($host_info.hostname == "localhost") {
                    $"üè† local"
                } else {
                    $"üåê ($host_info.name)"
                }
            }
            
        } catch {
            "‚ùì unknown"
        }
    }
    
}

# Function to toggle on and off the prompt
export def toggle-prompt [] {
    let context = load_context
    let new_context = $context | upsert prompt_show (not $context.prompt_show)
    save_context $new_context
    print $"üìç Context set to prompt_show: ($new_context.prompt_show)"
}

###########################################################################################################################################################
###########################################################################################################################################################
#####################                                                     Aliases                                                   #######################
###########################################################################################################################################################
###########################################################################################################################################################

export alias "ppo p" = get-prompt-context
export alias "ppo t" = toggle-prompt